name: Code quality

on:
  pull_request:
    paths:
      - "**.php"
      - "phpcs.xml"
      - ".github/workflows/code-quality.yml"
  push:
    branches: [main]
    paths:
      - "**.php"
      - "phpcs.xml"
      - ".github/workflows/code-quality.yml"

jobs:
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Get Composer Cache Directory
      id: get-composer-cache-dir
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
      
    - name: Cache Composer
      uses: actions/cache@v3.0.11
      id: composer-cache
      with:
        path: ${{ steps.get-composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: "Validate composer.json and composer.lock"
      run: "composer validate --no-check-publish"

    - name: Install dependencies with composer
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist

    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse

  phpcs:
    name: PHP_CodeSniffer
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        tools: cs2pr

    - name: Get Composer Cache Directory
      id: get-composer-cache-dir
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
      
    - name: Cache Composer
      uses: actions/cache@v3.0.11
      id: composer-cache
      with:
        path: ${{ steps.get-composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies with composer
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist

    - name: Run phpcs
      run: ./vendor/bin/phpcs . --report=checkstyle | cs2pr

  php-cs-fixer:
    name: PHP CS Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install dependencies with composer
        run: composer install --prefer-dist

      - name: Run php-cs-fixer
        run:  ./vendor/bin/php-cs-fixer fix --dry-run
